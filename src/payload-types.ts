/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    services: Service;
    media: Media;
    cities: City;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsSelect?: {
    pages: PagesSelect<false> | PagesSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    cities: CitiesSelect<false> | CitiesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect?: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs?: {
    tasks: unknown;
    workflows?: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: string | Page;
            } | null;
            url?: string | null;
            label: string;
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock | BannerBlock)[];
  meta?: {
    title?: string | null;
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        enableIcon?: boolean | null;
        icon?: {
          name?:
            | (
                | 'AcademicCapIcon'
                | 'AdjustmentsHorizontalIcon'
                | 'AdjustmentsVerticalIcon'
                | 'ArchiveBoxArrowDownIcon'
                | 'ArchiveBoxIcon'
                | 'ArchiveBoxXMarkIcon'
                | 'ArrowDownCircleIcon'
                | 'ArrowDownIcon'
                | 'ArrowDownLeftIcon'
                | 'ArrowDownOnSquareIcon'
                | 'ArrowDownOnSquareStackIcon'
                | 'ArrowDownRightIcon'
                | 'ArrowDownTrayIcon'
                | 'ArrowLeftCircleIcon'
                | 'ArrowLeftEndOnRectangleIcon'
                | 'ArrowLeftIcon'
                | 'ArrowLeftOnRectangleIcon'
                | 'ArrowLeftStartOnRectangleIcon'
                | 'ArrowLongDownIcon'
                | 'ArrowLongLeftIcon'
                | 'ArrowLongRightIcon'
                | 'ArrowLongUpIcon'
                | 'ArrowPathIcon'
                | 'ArrowPathRoundedSquareIcon'
                | 'ArrowRightCircleIcon'
                | 'ArrowRightEndOnRectangleIcon'
                | 'ArrowRightIcon'
                | 'ArrowRightOnRectangleIcon'
                | 'ArrowRightStartOnRectangleIcon'
                | 'ArrowSmallDownIcon'
                | 'ArrowSmallLeftIcon'
                | 'ArrowSmallRightIcon'
                | 'ArrowSmallUpIcon'
                | 'ArrowTopRightOnSquareIcon'
                | 'ArrowTrendingDownIcon'
                | 'ArrowTrendingUpIcon'
                | 'ArrowTurnDownLeftIcon'
                | 'ArrowTurnDownRightIcon'
                | 'ArrowTurnLeftDownIcon'
                | 'ArrowTurnLeftUpIcon'
                | 'ArrowTurnRightDownIcon'
                | 'ArrowTurnRightUpIcon'
                | 'ArrowTurnUpLeftIcon'
                | 'ArrowTurnUpRightIcon'
                | 'ArrowUpCircleIcon'
                | 'ArrowUpIcon'
                | 'ArrowUpLeftIcon'
                | 'ArrowUpOnSquareIcon'
                | 'ArrowUpOnSquareStackIcon'
                | 'ArrowUpRightIcon'
                | 'ArrowUpTrayIcon'
                | 'ArrowUturnDownIcon'
                | 'ArrowUturnLeftIcon'
                | 'ArrowUturnRightIcon'
                | 'ArrowUturnUpIcon'
                | 'ArrowsPointingInIcon'
                | 'ArrowsPointingOutIcon'
                | 'ArrowsRightLeftIcon'
                | 'ArrowsUpDownIcon'
                | 'AtSymbolIcon'
                | 'BackspaceIcon'
                | 'BackwardIcon'
                | 'BanknotesIcon'
                | 'Bars2Icon'
                | 'Bars3BottomLeftIcon'
                | 'Bars3BottomRightIcon'
                | 'Bars3CenterLeftIcon'
                | 'Bars3Icon'
                | 'Bars4Icon'
                | 'BarsArrowDownIcon'
                | 'BarsArrowUpIcon'
                | 'Battery0Icon'
                | 'Battery100Icon'
                | 'Battery50Icon'
                | 'BeakerIcon'
                | 'BellAlertIcon'
                | 'BellIcon'
                | 'BellSlashIcon'
                | 'BellSnoozeIcon'
                | 'BoldIcon'
                | 'BoltIcon'
                | 'BoltSlashIcon'
                | 'BookOpenIcon'
                | 'BookmarkIcon'
                | 'BookmarkSlashIcon'
                | 'BookmarkSquareIcon'
                | 'BriefcaseIcon'
                | 'BugAntIcon'
                | 'BuildingLibraryIcon'
                | 'BuildingOffice2Icon'
                | 'BuildingOfficeIcon'
                | 'BuildingStorefrontIcon'
                | 'CakeIcon'
                | 'CalculatorIcon'
                | 'CalendarDateRangeIcon'
                | 'CalendarDaysIcon'
                | 'CalendarIcon'
                | 'CameraIcon'
                | 'ChartBarIcon'
                | 'ChartBarSquareIcon'
                | 'ChartPieIcon'
                | 'ChatBubbleBottomCenterIcon'
                | 'ChatBubbleBottomCenterTextIcon'
                | 'ChatBubbleLeftEllipsisIcon'
                | 'ChatBubbleLeftIcon'
                | 'ChatBubbleLeftRightIcon'
                | 'ChatBubbleOvalLeftEllipsisIcon'
                | 'ChatBubbleOvalLeftIcon'
                | 'CheckBadgeIcon'
                | 'CheckCircleIcon'
                | 'CheckIcon'
                | 'ChevronDoubleDownIcon'
                | 'ChevronDoubleLeftIcon'
                | 'ChevronDoubleRightIcon'
                | 'ChevronDoubleUpIcon'
                | 'ChevronDownIcon'
                | 'ChevronLeftIcon'
                | 'ChevronRightIcon'
                | 'ChevronUpDownIcon'
                | 'ChevronUpIcon'
                | 'CircleStackIcon'
                | 'ClipboardDocumentCheckIcon'
                | 'ClipboardDocumentIcon'
                | 'ClipboardDocumentListIcon'
                | 'ClipboardIcon'
                | 'ClockIcon'
                | 'CloudArrowDownIcon'
                | 'CloudArrowUpIcon'
                | 'CloudIcon'
                | 'CodeBracketIcon'
                | 'CodeBracketSquareIcon'
                | 'Cog6ToothIcon'
                | 'Cog8ToothIcon'
                | 'CogIcon'
                | 'CommandLineIcon'
                | 'ComputerDesktopIcon'
                | 'CpuChipIcon'
                | 'CreditCardIcon'
                | 'CubeIcon'
                | 'CubeTransparentIcon'
                | 'CurrencyBangladeshiIcon'
                | 'CurrencyDollarIcon'
                | 'CurrencyEuroIcon'
                | 'CurrencyPoundIcon'
                | 'CurrencyRupeeIcon'
                | 'CurrencyYenIcon'
                | 'CursorArrowRaysIcon'
                | 'CursorArrowRippleIcon'
                | 'DevicePhoneMobileIcon'
                | 'DeviceTabletIcon'
                | 'DivideIcon'
                | 'DocumentArrowDownIcon'
                | 'DocumentArrowUpIcon'
                | 'DocumentChartBarIcon'
                | 'DocumentCheckIcon'
                | 'DocumentCurrencyBangladeshiIcon'
                | 'DocumentCurrencyDollarIcon'
                | 'DocumentCurrencyEuroIcon'
                | 'DocumentCurrencyPoundIcon'
                | 'DocumentCurrencyRupeeIcon'
                | 'DocumentCurrencyYenIcon'
                | 'DocumentDuplicateIcon'
                | 'DocumentIcon'
                | 'DocumentMagnifyingGlassIcon'
                | 'DocumentMinusIcon'
                | 'DocumentPlusIcon'
                | 'DocumentTextIcon'
                | 'EllipsisHorizontalCircleIcon'
                | 'EllipsisHorizontalIcon'
                | 'EllipsisVerticalIcon'
                | 'EnvelopeIcon'
                | 'EnvelopeOpenIcon'
                | 'EqualsIcon'
                | 'ExclamationCircleIcon'
                | 'ExclamationTriangleIcon'
                | 'EyeDropperIcon'
                | 'EyeIcon'
                | 'EyeSlashIcon'
                | 'FaceFrownIcon'
                | 'FaceSmileIcon'
                | 'FilmIcon'
                | 'FingerPrintIcon'
                | 'FireIcon'
                | 'FlagIcon'
                | 'FolderArrowDownIcon'
                | 'FolderIcon'
                | 'FolderMinusIcon'
                | 'FolderOpenIcon'
                | 'FolderPlusIcon'
                | 'ForwardIcon'
                | 'FunnelIcon'
                | 'GifIcon'
                | 'GiftIcon'
                | 'GiftTopIcon'
                | 'GlobeAltIcon'
                | 'GlobeAmericasIcon'
                | 'GlobeAsiaAustraliaIcon'
                | 'GlobeEuropeAfricaIcon'
                | 'H1Icon'
                | 'H2Icon'
                | 'H3Icon'
                | 'HandRaisedIcon'
                | 'HandThumbDownIcon'
                | 'HandThumbUpIcon'
                | 'HashtagIcon'
                | 'HeartIcon'
                | 'HomeIcon'
                | 'HomeModernIcon'
                | 'IdentificationIcon'
                | 'InboxArrowDownIcon'
                | 'InboxIcon'
                | 'InboxStackIcon'
                | 'InformationCircleIcon'
                | 'ItalicIcon'
                | 'KeyIcon'
                | 'LanguageIcon'
                | 'LifebuoyIcon'
                | 'LightBulbIcon'
                | 'LinkIcon'
                | 'LinkSlashIcon'
                | 'ListBulletIcon'
                | 'LockClosedIcon'
                | 'LockOpenIcon'
                | 'MagnifyingGlassCircleIcon'
                | 'MagnifyingGlassIcon'
                | 'MagnifyingGlassMinusIcon'
                | 'MagnifyingGlassPlusIcon'
                | 'MapIcon'
                | 'MapPinIcon'
                | 'MegaphoneIcon'
                | 'MicrophoneIcon'
                | 'MinusCircleIcon'
                | 'MinusIcon'
                | 'MinusSmallIcon'
                | 'MoonIcon'
                | 'MusicalNoteIcon'
                | 'NewspaperIcon'
                | 'NoSymbolIcon'
                | 'NumberedListIcon'
                | 'PaintBrushIcon'
                | 'PaperAirplaneIcon'
                | 'PaperClipIcon'
                | 'PauseCircleIcon'
                | 'PauseIcon'
                | 'PencilIcon'
                | 'PencilSquareIcon'
                | 'PercentBadgeIcon'
                | 'PhoneArrowDownLeftIcon'
                | 'PhoneArrowUpRightIcon'
                | 'PhoneIcon'
                | 'PhoneXMarkIcon'
                | 'PhotoIcon'
                | 'PlayCircleIcon'
                | 'PlayIcon'
                | 'PlayPauseIcon'
                | 'PlusCircleIcon'
                | 'PlusIcon'
                | 'PlusSmallIcon'
                | 'PowerIcon'
                | 'PresentationChartBarIcon'
                | 'PresentationChartLineIcon'
                | 'PrinterIcon'
                | 'PuzzlePieceIcon'
                | 'QrCodeIcon'
                | 'QuestionMarkCircleIcon'
                | 'QueueListIcon'
                | 'RadioIcon'
                | 'ReceiptPercentIcon'
                | 'ReceiptRefundIcon'
                | 'RectangleGroupIcon'
                | 'RectangleStackIcon'
                | 'RocketLaunchIcon'
                | 'RssIcon'
                | 'ScaleIcon'
                | 'ScissorsIcon'
                | 'ServerIcon'
                | 'ServerStackIcon'
                | 'ShareIcon'
                | 'ShieldCheckIcon'
                | 'ShieldExclamationIcon'
                | 'ShoppingBagIcon'
                | 'ShoppingCartIcon'
                | 'SignalIcon'
                | 'SignalSlashIcon'
                | 'SlashIcon'
                | 'SparklesIcon'
                | 'SpeakerWaveIcon'
                | 'SpeakerXMarkIcon'
                | 'Square2StackIcon'
                | 'Square3Stack3DIcon'
                | 'Squares2X2Icon'
                | 'SquaresPlusIcon'
                | 'StarIcon'
                | 'StopCircleIcon'
                | 'StopIcon'
                | 'StrikethroughIcon'
                | 'SunIcon'
                | 'SwatchIcon'
                | 'TableCellsIcon'
                | 'TagIcon'
                | 'TicketIcon'
                | 'TrashIcon'
                | 'TrophyIcon'
                | 'TruckIcon'
                | 'TvIcon'
                | 'UnderlineIcon'
                | 'UserCircleIcon'
                | 'UserGroupIcon'
                | 'UserIcon'
                | 'UserMinusIcon'
                | 'UserPlusIcon'
                | 'UsersIcon'
                | 'VariableIcon'
                | 'VideoCameraIcon'
                | 'VideoCameraSlashIcon'
                | 'ViewColumnsIcon'
                | 'ViewfinderCircleIcon'
                | 'WalletIcon'
                | 'WifiIcon'
                | 'WindowIcon'
                | 'WrenchIcon'
                | 'WrenchScrewdriverIcon'
                | 'XCircleIcon'
                | 'XMarkIcon'
              )
            | null;
          size?: ('sm' | 'md' | 'lg') | null;
          color?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  position?: ('default' | 'fullscreen') | null;
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'services' | null;
  categories?: (string | Category)[] | null;
  locations?: (string | City)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'services';
        value: string | Service;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities".
 */
export interface City {
  id: string;
  'city name': string;
  country: string;
  'display name': string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  title: string;
  summary: string;
  city: (string | City)[];
  listedOn?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description_html?: string | null;
  gallery?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  layout?: (CallToActionBlock | ContentBlock | MediaBlock)[] | null;
  categories?: (string | null) | Category;
  slug?: string | null;
  slugLock?: boolean | null;
  skipSync?: boolean | null;
  vendor?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  displayName?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  image?: (string | null) | Media;
  isVendor?: boolean | null;
  isTraveler?: boolean | null;
  isAdmin?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'services';
          value: string | Service;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'services';
        value: string | Service;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'cities';
        value: string | City;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?:
          | T
          | {
              richText?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    enableIcon?: T;
                    icon?:
                      | T
                      | {
                          name?: T;
                          size?: T;
                          color?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              position?: T;
              media?: T;
              id?: T;
              blockName?: T;
            };
        archive?:
          | T
          | {
              introContent?: T;
              populateBy?: T;
              relationTo?: T;
              categories?: T;
              locations?: T;
              limit?: T;
              selectedDocs?: T;
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              style?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        overview?: T;
        title?: T;
        image?: T;
        description?: T;
        preview?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  summary?: T;
  city?: T;
  listedOn?: T;
  description?: T;
  description_html?: T;
  gallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  layout?:
    | T
    | {
        cta?:
          | T
          | {
              richText?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T;
                    richText?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    enableIcon?: T;
                    icon?:
                      | T
                      | {
                          name?: T;
                          size?: T;
                          color?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              position?: T;
              media?: T;
              id?: T;
              blockName?: T;
            };
      };
  categories?: T;
  slug?: T;
  slugLock?: T;
  skipSync?: T;
  vendor?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities_select".
 */
export interface CitiesSelect<T extends boolean = true> {
  'city name'?: T;
  country?: T;
  'display name'?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  displayName?: T;
  firstName?: T;
  lastName?: T;
  image?: T;
  isVendor?: T;
  isTraveler?: T;
  isAdmin?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}